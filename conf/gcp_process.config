/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining GCP process parameteres for the pipeline
    These should be used in both gcp and gcpClin profiles
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*/

process {
    // Configure container for each task
    // This allows us to use a different container depending on the environment by
    // switching configs. This can be useful when dealing with private repos
    withName:snp_pileup {
        container = 'gcr.io/repare-database/snipdx_tools:prod_2.2'
    }
    withName:run_facet_script {
        container = 'gcr.io/repare-database/snipdx_tools:prod_2.2'
    }
    withName:run_facet_script_with_purecn_diplogr {
        container = 'gcr.io/repare-database/snipdx_tools:prod_2.2'
    }
    withName:insert_metrics {
        // if this container creates errors, switch to the following one instead:
        //quay.io/biocontainers/samtools:1.15.1--h1170115_0
        container = "gcr.io/repare-database/samtools:1.9"
    }
    withName:local_insert_metrics {
        container = "gcr.io/repare-database/snipdx_tools:prod_2.2"
    }
    withName:rmarkdown_report_process{
        container   = "gcr.io/repare-database/rmarkdown:prod_1.0"
        // this image requires a larger boot disk than the default 10.GB to run with
        // 20.GB would probably be fine, tbh
        google.lifeSciences.bootDiskSize = 30.GB
    }
    withName:get_chrom_plots_and_segments{
        container = 'gcr.io/repare-database/snipdx_tools:prod_2.3'
    }
    withName:get_chrom_plots_and_segments_w_purecn_diplogr{
        container = 'gcr.io/repare-database/snipdx_tools:prod_2.3'
    }
    withName:freebayes {
        container = 'gcr.io/repare-database/freebayes:prod_1.0'
    }
    withName:dbsnp_annotate_variants {
        container = 'gcr.io/repare-database/snpeff:1.0'
    }
    withName:purecn_coverage {
        container = 'markusriester/purecn:2.0.2'
    }
    withName:purecn {
        container = 'markusriester/purecn:2.0.2'
    }
    withName:callstate {
        container = 'quay.io/biocontainers/callstate:0.0.2--hbeb723e_0'
    }
    withName:purecn_biomarkers {
        container = 'markusriester/purecn:2.0.2'
    }
    withName:diplogr_calculation {
        container = 'gcr.io/repare-database/python_tools:1.0'
    }

    // override normal machine reqs with standard GCP machines
    withLabel: teeny_task{
        machineType                     = 'n2-standard-2'
        disk                            = "100GB"
        google.lifeSciences.preemptible = true
        errorStrategy = { task.exitStatus==14 ? 'retry' : 'terminate' }
        maxRetries = 5
    }
    withLabel: small_task{
        machineType                     = 'n2-standard-4'
        disk                            = "100GB"
        google.lifeSciences.preemptible = true
        errorStrategy = { task.exitStatus==14 ? 'retry' : 'terminate' }
        maxRetries = 5
    }
    withLabel: reg_task{
        machineType                     = 'n2-standard-8'
        disk                            = "100GB"
        google.lifeSciences.preemptible = true
        errorStrategy = { task.exitStatus==14 ? 'retry' : 'terminate' }
        maxRetries = 5
    }
    withLabel: large_task{
        machineType                     = 'n2-standard-16'
        disk                            = "100GB"
        google.lifeSciences.preemptible = true
    }
}